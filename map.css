/* ----------------------------------------------------------------------- */
/* 3. Stiluri pentru Hartă și Leaflet                                    */
/* ----------------------------------------------------------------------- */
#map-container {
    position: absolute;
    top: 0; left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    background: #14203c;
}
#map {
    width: 100%;
    height: 100%;
    background-color: #1a2747;
    position: relative;
    z-index: 1;
    transition: opacity 0.3s ease-in-out;
}
#map::after {
    content: '';
    position: absolute;
    inset: 0;
    z-index: 1002;
    pointer-events: none;
    background: url('https://www.transparenttextures.com/patterns/diamond-upholstery.png') repeat;
    /* --- MODIFICARE --- Am redus opacitatea de la 0.13 pentru a face textura mai subtilă */
    opacity: 0.05; 
    mix-blend-mode: lighten;
}

/* MODIFICARE CHEIE: Fundalul containerului principal Leaflet este setat la
   culoarea albastră dorită. Acesta va fi vizibil mereu, deoarece nu mai
   există un strat de hărți (tile layer) care să-l acopere. */
.leaflet-container {
    background: #1a2747;
}

#map-background-fake {
    position: absolute;
    top: 0; left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
    background: url('images/background.png') center center / cover no-repeat;
    pointer-events: none;
}

/* ----------------------------------------------------------------------- */
/* 4. Stiluri pentru Suprapunerea Evenimentelor (Puncte, Etichete)       */
/* ----------------------------------------------------------------------- */
#overlay-container {
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    pointer-events: none;
    z-index: 1000;
}

/* Generic class for all event elements for animation handling */
.event-element {
    position: absolute;
    opacity: 0;
    transition: opacity 0.3s ease-out;
}
.event-element.visible {
    opacity: 1;
}
.event-element.hiding {
    opacity: 0;
    transition: opacity 0.2s ease-in;
}

/* All dots are now interactive */
.event-dot, .atrocity-dot, .minor-event-dot {
    pointer-events: all;
    cursor: pointer;
}

/* Ensure Leaflet div icons are visible */
.leaflet-marker-icon.event-element {
    background: transparent !important;
    border: none !important;
}

/* Hover effects for the div icons */
.leaflet-marker-icon.event-element:hover div {
    transform: translate(-50%, -50%) scale(1.8) !important;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.7) !important;
}

.marker-svg-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 16px;
    height: 16px;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
}
.marker-svg {
    display: block;
    width: 16px;
    height: 16px;
    filter: drop-shadow(0 2px 6px rgba(0,0,0,0.18));
    pointer-events: none;
}
.event-dot, .atrocity-dot, .minor-event-dot {
    background: none !important;
    border: none !important;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    box-shadow: 0 0 0 2px rgba(0,0,0,0.12);
    transition: box-shadow 0.2s, transform 0.2s;
    z-index: 999;
    padding: 0;
}
.event-dot:hover .marker-svg,
.atrocity-dot:hover .marker-svg,
.minor-event-dot:hover .marker-svg {
    filter: drop-shadow(0 0 10px #fff) drop-shadow(0 2px 6px rgba(0,0,0,0.18));
    transform: scale(1.25);
}

/* Simple offset dot styles - dots moved to avoid overlap */
.offset-dot {
    position: relative;
}

@keyframes pulse {
    0% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
    50% { opacity: 0.5; transform: translate(-50%, -50%) scale(1.5); }
    100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

/* ----------------------------------------------------------------------- */
/* REVISED: Hover Box and Line Styles                                    */
/* ----------------------------------------------------------------------- */
#hover-box-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* Container is passthrough */
    z-index: 1010;
}

#hover-line-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1009; /* Below boxes, above dots */
}

.hover-connector-line {
    stroke-width: 2px;
    stroke: rgba(220, 220, 220, 0.8);
    opacity: 0;
    transition: opacity 0.2s ease-out;
}
.hover-connector-line.visible {
    opacity: 1;
}

.event-hover-box {
    position: absolute;
    width: 160px;
    padding: 8px;
    background-color: rgba(40, 40, 40, 0.9);
    backdrop-filter: blur(5px);
    border-radius: 5px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.5);
    display: flex;
    align-items: center;
    pointer-events: all;
    opacity: 0;
    transition: opacity 0.25s ease-out;
    transform: translate(-50%, -50%); /* Center the box on its position */
}

.event-hover-box.visible {
    opacity: 1;
}

.event-hover-box img {
    width: 40px;
    height: 40px;
    border-radius: 3px;
    margin-right: 8px;
    object-fit: cover;
}

.event-hover-box .title {
    font-size: 13px;
    color: #f0f0f0;
    line-height: 1.3;
}

/* Style variants for different event types */
.event-hover-box.major {
    border-top: 3px solid #4a6d8a;
}
.event-hover-box.minor {
    border-top: 3px solid #f1c40f;
}
.event-hover-box.atrocity {
    border-top: 3px solid #e74c3c;
}

.offset-dot::after, .offset-dot::before {
    pointer-events: none;
}

.event-dot, .atrocity-dot, .minor-event-dot {
    z-index: 1001;
}

#dots-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1002;
}

.event-element {
    pointer-events: all;
}

.legend-marker-svg {
    display: inline-block;
    vertical-align: middle;
    width: 10px !important;
    height: 10px !important;
    margin-right: 2px;
    filter: none !important;
    box-shadow: none !important;
    pointer-events: none;
    background: none !important;
}

.leaflet-overlay-pane svg,
.leaflet-overlay-pane canvas {
    pointer-events: none !important;
}
